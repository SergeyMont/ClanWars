package testtask.repository;

import testtask.model.Clan;
import testtask.model.Gold;

import java.sql.ResultSet;
import java.sql.SQLException;

public class ClanRepositoryImpl implements ClanRepository {
    private final TotalRepository repository = new TotalRepositoryImpl();

    @Override
    public void createTableClan() {
        String sql = "CREATE TABLE IF NOT EXISTS clan " +
                "(id INTEGER GENERATED BY DEFAULT AS IDENTITY not NULL, " +
                " name VARCHAR(255), " +
                " gold INTEGER, " +
                " PRIMARY KEY ( id ))";
        repository.executeSql(sql);

    }

    @Override
    public Clan createClan(Clan clan) {
        String sql = "INSERT INTO clan (name, gold) VALUES ('" + clan.getName() + "'," + clan.getGold().get() + ")";
        repository.executeSql(sql);
        String query = "SELECT * FROM clan " +
                "WHERE name = '" + clan.getName() + "'";
        ResultSet resultSet = repository.getUpdate(query);
        try {
            resultSet.next();
            clan.setId(resultSet.getInt("id"));
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        return clan;
    }

    @Override
    public void deleteClan(int id) {
        String sql = "DELETE FROM clan WHERE id=" + id;
        repository.executeSql(sql);
    }

    @Override
    public Clan changeClan(Clan clan) {
        String sql = "UPDATE clan SET name='" + clan.getName() + "' , gold = "
                + clan.getGold().get() + " WHERE id =" + clan.getId();
        repository.executeSql(sql);
        clan = getClan(clan.getId());
        return clan;
    }

    @Override
    public Clan getClan(int id) {
        String sql = "SELECT * FROM clan WHERE id=" + id;
        ResultSet rs = repository.getUpdate(sql);
        try {
            return mapToClan(rs);
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }

    private Clan mapToClan(ResultSet rs) throws SQLException {
        Clan clan = new Clan();
        while (rs.next()) {
            clan.setId(rs.getInt("id"));
            clan.setName(rs.getString("name"));
            clan.setGold(new Gold());
            clan.getGold().change(rs.getInt("gold"));
        }
        return clan;
    }
}
