package testtask.repository;

import testtask.model.Task;

import java.sql.ResultSet;
import java.sql.SQLException;

public class TaskRepositoryImpl implements TaskRepository {
    private final TotalRepository repository = new TotalRepositoryImpl();

    @Override
    public void createTableTask() {
        String sql = "CREATE TABLE IF NOT EXISTS task " +
                "(id INTEGER GENERATED BY DEFAULT AS IDENTITY not NULL, " +
                " name VARCHAR(255), " +
                " reward INTEGER, " +
                " complete BOOLEAN , " +
                " PRIMARY KEY ( id ))";
        repository.executeSql(sql);

    }

    @Override
    public Task createTask(Task task) {
        String sql = "INSERT INTO task (name, reward, complete) VALUES ('" + task.getName() + "'," +
                task.getReward() + ", " + task.isComplete() + ")";
        repository.executeSql(sql);
        String query = "SELECT * FROM task " +
                "WHERE name = '" + task.getName() + "'";
        ResultSet resultSet = repository.getUpdate(query);
        try {
            resultSet.next();
            task.setId(resultSet.getInt("id"));
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        return task;
    }

    @Override
    public void deleteTask(int id) {
        String sql = "DELETE FROM task WHERE id=" + id;
        repository.executeSql(sql);

    }

    @Override
    public Task changeTask(Task task) {
        String sql = "UPDATE task SET name='" + task.getName() + "' , reward = "
                + task.getReward() + ", complete =" + task.isComplete() + " WHERE id =" + task.getId();
        repository.executeSql(sql);
        task = getTask(task.getId());
        return task;
    }

    @Override
    public Task getTask(int id) {
        String sql = "SELECT * FROM task WHERE id=" + id;
        ResultSet rs = repository.getUpdate(sql);
        try {
            return mapToTask(rs);
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }

    private Task mapToTask(ResultSet rs) throws SQLException {
        Task task = new Task();
        while (rs.next()) {
            task.setId(rs.getInt("id"));
            task.setName(rs.getString("name"));
            task.setReward(rs.getInt("reward"));
            task.setComplete(rs.getBoolean("complete"));
        }
        return task;
    }
}
